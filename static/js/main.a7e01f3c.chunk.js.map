{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","App.tsx","index.tsx"],"names":["PostsList","posts","selectedPostId","openPost","className","length","map","post","id","title","type","onClick","request","url","options","fetch","then","res","json","NewCommentForm","setCommentAdded","useState","nameValue","setNameValue","emailValue","setEmailValue","bodyValue","setBodyValue","addNewComment","e","preventDefault","comment","method","headers","body","JSON","stringify","postId","name","email","addComment","prevState","onSubmit","placeholder","value","onChange","target","PostDetails","postDetails","setPostDetails","comments","setComments","isCommentShow","setIsCommentShow","commentAdded","useEffect","data","getPostComments","commentId","filter","item","App","setPosts","selectedUser","setSelectedUser","setSelectedPostId","userId","ReactDOM","render","document","getElementById"],"mappings":"qTAUaA,EAA6B,SAAC,GAIpC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,eACAC,EACI,EADJA,SAEA,OACE,sBAAKC,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAkB,UAAQ,cAAxC,SACGH,EAAMI,OAAS,GAAKJ,EAAMK,KAAI,SAACC,GAAD,OAC7B,qBAEEH,UAAU,kBAFZ,UAIE,gCACE,6CAAcG,EAAKC,GAAnB,SACCD,EAAKE,SAEPF,EAAKC,KAAON,EACX,wBACEQ,KAAK,SACLN,UAAU,2BACVO,QAAS,WACPR,EAAS,OAJb,mBAUA,wBACEO,KAAK,SACLN,UAAU,2BACVO,QAAS,WACPR,EAASI,EAAKC,KAJlB,oBAlBGD,EAAKC,aCpBhBI,EAAU,SAACC,EAAaC,GAAd,OAA+BC,MAAM,GAAD,OAF5B,qCAE4B,OAAeF,GAAOC,GACvEE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WCMNC,G,MAAkC,SAAC,GAGzC,IAFLjB,EAEI,EAFJA,eACAkB,EACI,EADJA,gBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAgB,SAACC,GACrBA,EAAEC,iBDSoB,SAACC,GAAD,OAKpBnB,EACJ,YACA,CACEoB,OAAQ,OACRC,QAAS,CACP,eAAgB,mCAElBC,KAAMC,KAAKC,UAAU,CACnBC,OAAQN,EAAQM,OAChBC,KAAMP,EAAQO,KACdC,MAAOR,EAAQQ,MACfL,KAAMH,EAAQG,SChBhBM,CAPgB,CACdF,KAAMhB,EACNiB,MAAOf,EACPU,KAAMR,EACNW,OAAQnC,IAIPc,MAAK,WACJI,GAAgB,SAACqB,GAAD,OAAyBA,KACzClB,EAAa,IACbE,EAAc,IACdE,EAAa,QAInB,OACE,uBACEvB,UAAU,iBACVsC,SAAU,SAACb,GAAD,OAAOD,EAAcC,IAFjC,UAIE,qBAAKzB,UAAU,aAAf,SACE,uBACEM,KAAK,OACL4B,KAAK,OACLK,YAAY,YACZvC,UAAU,wBACVwC,MAAOtB,EACPuB,SAAU,SAAChB,GAAD,OAAON,EAAaM,EAAEiB,OAAOF,YAI3C,qBAAKxC,UAAU,aAAf,SACE,uBACEM,KAAK,OACL4B,KAAK,QACLK,YAAY,aACZvC,UAAU,wBACVwC,MAAOpB,EACPqB,SAAU,SAAChB,GAAD,OAAOJ,EAAcI,EAAEiB,OAAOF,YAI5C,qBAAKxC,UAAU,aAAf,SACE,0BACEkC,KAAK,OACLK,YAAY,oBACZvC,UAAU,wBACVwC,MAAOlB,EACPmB,SAAU,SAAChB,GAAD,OAAOF,EAAaE,EAAEiB,OAAOF,YAI3C,wBACElC,KAAK,SACLN,UAAU,uCAFZ,gCC9DO2C,G,MAA+B,SAAC,GAAwB,IAAtB7C,EAAqB,EAArBA,eAC7C,EAAsCmB,qBAAtC,mBAAO2B,EAAP,KAAoBC,EAApB,KACA,EAAgC5B,mBAAoB,IAApD,mBAAO6B,EAAP,KAAiBC,EAAjB,KACA,EAA0C9B,oBAAkB,GAA5D,mBAAO+B,EAAP,KAAsBC,EAAtB,KACA,EAAwChC,oBAAkB,GAA1D,mBAAOiC,EAAP,KAAqBlC,EAArB,KASA,OAPAmC,qBAAU,WFJkB,IAAClB,KEKZnC,EFL+BU,EAAQ,UAAD,OAAWyB,KEM7DrB,MAAK,SAAAwC,GAAI,OAAIP,EAAeO,MFJJ,SAACnB,GAAD,OAAoBzB,EAAQ,oBAAD,OAAqByB,IEK3EoB,CAAgBvD,GACbc,MAAK,SAAAwC,GAAI,OAAIL,EAAYK,QAC3B,CAACtD,EAAgBoD,IAGlB,qBAAKlD,UAAU,cAAf,SACG4C,GACC,qCACE,qDAAsB9C,KAEtB,yBAASE,UAAU,oBAAnB,SACE,4BAAI4C,EAAYvC,UAGjByC,EAAS7C,OAAS,GACjB,0BAASD,UAAU,wBAAnB,UACE,wBACEM,KAAK,SACLN,UAAU,SACVO,QAAS,kBAAM0C,GAAkBD,IAHnC,SAKGA,EAAa,eACJF,EAAS7C,OADL,4BAGJ6C,EAAS7C,OAHL,eAOf+C,GACC,oBAAIhD,UAAU,oBAAoB,UAAQ,cAA1C,SACG8C,EAAS5C,KAAI,SAACyB,GAAD,OACZ,qBAEE3B,UAAU,yBAFZ,UAIE,wBACEM,KAAK,SACLN,UAAU,oCACVO,QAAS,WFzCJ,IAAC+C,KE0CU3B,EAAQvB,GF1CII,EAAQ,aAAD,OAC5C8C,GACb,CACE1B,OAAQ,SACRC,QAAS,CACP,eAAgB,sCEsCOjB,MAAK,WACJmC,EAAYD,EAASS,QAAO,SAAAC,GAAI,OAC9BA,EAAKpD,KAAOuB,EAAQvB,WAP9B,eAcA,4BAAIuB,EAAQG,SAjBPH,EAAQvB,YAyBzB,kCACE,qBAAKJ,UAAU,4BAAf,SACE,cAAC,EAAD,CACEF,eAAgBA,EAChBkB,gBAAiBA,eCblByC,EA7DO,WACpB,MAA0BxC,mBAAS,IAAnC,mBAAOpB,EAAP,KAAc6D,EAAd,KACA,EAAwCzC,mBAAS,GAAjD,mBAAO0C,EAAP,KAAqBC,EAArB,KACA,EAA4C3C,mBAAwB,MAApE,mBAAOnB,EAAP,KAAuB+D,EAAvB,KAEAV,qBAAU,WHPgB,IAACW,KGQZH,EHNNnD,EADM,IAAXsD,EACa,iBAAD,OAAkBA,GAGnB,WGIVlD,MAAK,SAAAwC,GAAI,OAAIM,EAASN,QACxB,CAACO,IAMJ,OACE,sBAAK3D,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACVwC,MAAOmB,EACPlB,SAAU,SAAChB,GAAD,OAAOmC,GAAiBnC,EAAEiB,OAAOF,QAH7C,UAKE,wBAAQA,MAAM,IAAd,uBACA,wBAAQA,MAAM,IAAd,2BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,8BACA,wBAAQA,MAAM,IAAd,kCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,IAAd,sCACA,wBAAQA,MAAM,IAAd,6BACA,wBAAQA,MAAM,KAAd,mCAKN,uBAAMxC,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAOA,EACPC,eAAgBA,EAChBC,SAnCO,SAACkC,GAChB4B,EAAkB5B,QAsCM,OAAnBnC,GACC,qBAAKE,UAAU,eAAf,SACE,cAAC,EAAD,CACEF,eAAgBA,aCvD9BiE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a7e01f3c.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../../types/Post';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  selectedPostId: number | null,\n  openPost: (postId: number | null) => void,\n};\n\nexport const PostsList: React.FC<Props> = ({\n  posts,\n  selectedPostId,\n  openPost,\n}) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {posts.length > 0 && posts.map((post) => (\n          <li\n            key={post.id}\n            className=\"PostsList__item\"\n          >\n            <div>\n              <b>{`[User #${post.id}]: `}</b>\n              {post.title}\n            </div>\n            {post.id === selectedPostId ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  openPost(null);\n                }}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => {\n                  openPost(post.id);\n                }}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nconst request = (url: string, options?: {}) => fetch(`${BASE_URL}${url}`, options)\n  .then(res => res.json());\n\nexport const getUserPosts = (userId: number) => {\n  if (userId !== 0) {\n    return request(`/posts?userId=${userId}`);\n  }\n\n  return request('/posts');\n};\n\nexport const getPostDetails = (postId: number) => request(`/posts/${postId}`);\n\nexport const getPostComments = (postId: number) => request(`/comments?postId=${postId}`);\n\nexport const deleteComment = (commentId: number) => request(\n  `/comments/${commentId}`,\n  {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n  },\n);\n\nexport const addComment = (comment: {\n  postId: number,\n  name: string,\n  email: string,\n  body: string,\n}) => request(\n  '/comments',\n  {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      postId: comment.postId,\n      name: comment.name,\n      email: comment.email,\n      body: comment.body,\n    }),\n  },\n);\n","import React, { useState } from 'react';\nimport { addComment } from '../../api/api';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  selectedPostId: number;\n  setCommentAdded: (prevState: any) => void;\n};\n\nexport const NewCommentForm: React.FC<Props> = ({\n  selectedPostId,\n  setCommentAdded,\n}) => {\n  const [nameValue, setNameValue] = useState('');\n  const [emailValue, setEmailValue] = useState('');\n  const [bodyValue, setBodyValue] = useState('');\n\n  const addNewComment = (e: any) => {\n    e.preventDefault();\n\n    const comment = {\n      name: nameValue,\n      email: emailValue,\n      body: bodyValue,\n      postId: selectedPostId,\n    };\n\n    addComment(comment)\n      .then(() => {\n        setCommentAdded((prevState: boolean) => !prevState);\n        setNameValue('');\n        setEmailValue('');\n        setBodyValue('');\n      });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(e) => addNewComment(e)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={nameValue}\n          onChange={(e) => setNameValue(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={emailValue}\n          onChange={(e) => setEmailValue(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={bodyValue}\n          onChange={(e) => setBodyValue(e.target.value)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPostDetails, getPostComments, deleteComment } from '../../api/api';\nimport { Comment } from '../../types/Comment';\nimport { Details } from '../../types/Details';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  selectedPostId: number;\n};\n\nexport const PostDetails: React.FC<Props> = ({ selectedPostId }) => {\n  const [postDetails, setPostDetails] = useState<Details>();\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isCommentShow, setIsCommentShow] = useState<boolean>(true);\n  const [commentAdded, setCommentAdded] = useState<boolean>(false);\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(data => setPostDetails(data));\n    getPostComments(selectedPostId)\n      .then(data => setComments(data));\n  }, [selectedPostId, commentAdded]);\n\n  return (\n    <div className=\"PostDetails\">\n      {postDetails && (\n        <>\n          <h2>{`Post details: ${selectedPostId}`}</h2>\n\n          <section className=\"PostDetails__post\">\n            <p>{postDetails.title}</p>\n          </section>\n\n          {comments.length > 0 && (\n            <section className=\"PostDetails__comments\">\n              <button\n                type=\"button\"\n                className=\"button\"\n                onClick={() => setIsCommentShow(!isCommentShow)}\n              >\n                {isCommentShow ? (\n                  `Hide ${comments.length} comments`\n                ) : (\n                  `Show ${comments.length} comments`\n                )}\n              </button>\n\n              {isCommentShow && (\n                <ul className=\"PostDetails__list\" data-cy=\"postDetails\">\n                  {comments.map((comment) => (\n                    <li\n                      key={comment.id}\n                      className=\"PostDetails__list-item\"\n                    >\n                      <button\n                        type=\"button\"\n                        className=\"PostDetails__remove-button button\"\n                        onClick={() => {\n                          deleteComment(comment.id)\n                            .then(() => {\n                              setComments(comments.filter(item => (\n                                item.id !== comment.id\n                              )));\n                            });\n                        }}\n                      >\n                        X\n                      </button>\n                      <p>{comment.body}</p>\n                    </li>\n                  ))}\n                </ul>\n              )}\n            </section>\n          )}\n\n          <section>\n            <div className=\"PostDetails__form-wrapper\">\n              <NewCommentForm\n                selectedPostId={selectedPostId}\n                setCommentAdded={setCommentAdded}\n              />\n            </div>\n          </section>\n        </>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getUserPosts } from './api/api';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState<number | null>(null);\n\n  useEffect(() => {\n    getUserPosts(selectedUser)\n      .then(data => setPosts(data));\n  }, [selectedUser]);\n\n  const openPost = (postId: number | null) => {\n    setSelectedPostId(postId);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={selectedUser}\n            onChange={(e) => setSelectedUser(+e.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            openPost={openPost}\n          />\n        </div>\n\n        {selectedPostId !== null && (\n          <div className=\"App__content\">\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}